#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int dice[10], max_res = -987654321;
int map[33][6] =
{
    // {해당 칸의 점수, 주사위 1로 가는곳, 주사위 2로 가는곳, ...}
    {0,   1, 2, 3, 4, 5},   // 0
    {2,   2, 3, 4, 5, 6},   // 1
    {4,   3, 4, 5, 6, 7},   // 2
    {6,   4, 5, 6, 7, 8},   // 3
    {8,   5, 6, 7, 8, 9},   // 4
    {10,  22, 23, 24, 25, 26},  // 5
    {12,  7, 8, 9, 10, 11},     // 6
    {14,  8, 9, 10, 11, 12},    // 7
    {16,  9, 10, 11, 12, 13},   // 8
    {18,  10, 11, 12, 13, 14},  // 9
    {20,  28, 29, 25, 26, 27},  // 10
    {22,  12, 13, 14, 15, 16},  // 11
    {24,  13, 14, 15, 16, 17},  // 12
    {26,  14, 15, 16, 17, 18},  // 13
    {28,  15, 16, 17, 18, 19},  // 14
    {30,  30, 31, 32, 25, 26},  // 15
    {32,  17, 18, 19, 20, 21},  // 16
    {34,  18, 19, 20, 21, 21},  // 17
    {36,  19, 20, 21, 21, 21},  // 18
    {38,  20, 21, 21, 21, 21},  // 19
    {40,  21, 21, 21, 21, 21},  // 20
    {0,   21, 21, 21, 21, 21},  // 21
    {13,  23, 24, 25, 26, 27},  // 22
    {16,  24, 25, 26, 27, 20},  // 23
    {19,  25, 26, 27, 20, 21},  // 24
    {25,  26, 27, 20, 21, 21},  // 25
    {30,  27, 20, 21, 21, 21},  // 26
    {35,  20, 21, 21, 21, 21},  // 27
    {22,  29, 25, 26, 27, 20},  // 28
    {24,  25, 26, 27, 20, 21},  // 29
    {28,  31, 32, 25, 26, 27},  // 30
    {27,  32, 25, 26, 27, 20},  // 31
    {26,  25, 26, 27, 20, 21}   // 32
};

int move(vector<int> &A)
{
    int res = 0;
    bool vist[33] = {false, };
    int horse[5] = {0, };

    for(int i=0; i<10; i++)
    {
        int cur = horse[A[i]];
        int next = map[cur][dice[i]];
        
        if(cur == 21 || (next != 21 && vist[next]))
            return -987654321;

        vist[cur] = false;
        vist[next] = true;
        
        horse[A[i]] = next;

        res += map[next][0];
    }
    return res;
}
void go(int cnt, vector<int> &A)
{
    if(cnt == 10)
    {
        max_res = max(max_res, move(A));
        return;
    }

    for(int i=1; i<=4; i++)
    {
        A.push_back(i);
        go(cnt + 1, A);
        A.pop_back();
    }
}
void solve()
{
    vector<int> A;
    go(0, A);
    cout << max_res;
}
void input()
{
    for(int i=0; i<10; i++)
        cin >> dice[i];
}
int main()
{
    input();
    solve();
    return 0;
}
